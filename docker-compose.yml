services:
  # MongoDB
  mongo:
    image: mongo:7.0
    container_name: sparrow-mongo
    ports:
      - "27017:27017"
    networks:
      - localnet
    env_file:
      - .env.docker-setup

  # Sparrow Api Server
  sparrow-api:
    image: sparrowapi/sparrow-api:self-hostv1
    container_name: sparrow-api
    env_file:
      - .env.docker-setup
    networks:
      - localnet
    depends_on:
      - mongo
    ports:
      - "9000:9000"

  # Sparrow Auth Server
  sparrow-auth:
    image: sparrowapi/sparrow-auth:self-host-v1
    container_name: sparrow-auth
    networks:
      - localnet
    depends_on:
      - sparrow-api
      - mongo
    ports:
      - "1421:1421"
    command: >-
      sh -c "
        echo 'window.runtimeConfig = {
          VITE_API_URL: \"${VITE_API_URL}\",
          VITE_SPARROW_SUPPORT_EMAIL: \"${VITE_SPARROW_SUPPORT_EMAIL}\",
          VITE_SPARROW_OAUTH: \"${VITE_SPARROW_OAUTH}\",
          VITE_ENABLE_MIX_PANEL: \"${VITE_ENABLE_MIX_PANEL}\",
          VITE_MIX_PANEL_TOKEN: \"${VITE_MIX_PANEL_TOKEN}\",
          VITE_TERMS_OF_SERVICE: \"${VITE_TERMS_OF_SERVICE}\",
          VITE_SPARROW_WEB_URL: \"${VITE_SPARROW_WEB_URL}\",
          VITE_SPARROW_PRIVACY_POLICY: \"${VITE_SPARROW_PRIVACY_POLICY}\"
        }' > /usr/share/nginx/html/runtime-config.js && nginx -g 'daemon off;'
      "
    env_file:
      - .env.docker-setup

  # Sparrow Proxy Service
  sparrow-proxy:
    image: sparrowapi/sparrow-proxy-service:self-host-v1
    container_name: sparrow-proxy
    networks:
      - localnet
    ports:
      - 3000:3000

  # Sparrow Web App
  sparrow-web:
    build:
      context: .
      dockerfile: Sparrow-Web.Dockerfile
      args:
        VITE_WEB_BASE_URL: ${VITE_WEB_BASE_URL}
        VITE_WEB_API_URL: ${VITE_WEB_API_URL}
        VITE_WEB_AUTH_URL: ${VITE_WEB_AUTH_URL}
        VITE_WEB_SPARROW_ADMIN_URL: ${VITE_WEB_SPARROW_ADMIN_URL}
        VITE_WEB_SOCKET_IO_API_URL: ${VITE_WEB_SOCKET_IO_API_URL}
        VITE_WEB_SPARROW_OAUTH: ${VITE_WEB_SPARROW_OAUTH}
        VITE_WEB_PROXY_SERVICE: ${VITE_WEB_PROXY_SERVICE}
        VITE_WEB_SPARROW_AI_WEBSOCKET: ${VITE_WEB_SPARROW_AI_WEBSOCKET}
        VITE_WEB_AZURE_CDN_URL: ${VITE_WEB_AZURE_CDN_URL}
        VITE_WEB_AZURE_INSIGHTS_CONNECTION_STRING: ${VITE_WEB_AZURE_INSIGHTS_CONNECTION_STRING}
        VITE_WEB_MARKETING_URL: ${VITE_WEB_MARKETING_URL}
        VITE_WEB_SENTRY_DSN: ${VITE_WEB_SENTRY_DSN}
        VITE_WEB_APP_ENVIRONMENT: ${VITE_WEB_APP_ENVIRONMENT}
        VITE_WEB_POSTHOG_CONNECTION_API_KEY: ${VITE_WEB_POSTHOG_CONNECTION_API_KEY}
        VITE_WEB_POSTHOG_API_URL: ${VITE_WEB_POSTHOG_API_URL}
        VITE_WEB_RELEASE_NOTES_PAT_TOKEN: ${VITE_WEB_RELEASE_NOTES_PAT_TOKEN}
        VITE_WEB_CANNY_URL: ${VITE_WEB_CANNY_URL}
        VITE_WEB_CANNY_API: ${VITE_WEB_CANNY_API}
        VITE_WEB_API_TIMEOUT: ${VITE_WEB_API_TIMEOUT}
        VITE_WEB_SPARROW_GITHUB: ${VITE_WEB_SPARROW_GITHUB}
        VITE_WEB_SPARROW_LINKEDIN: ${VITE_WEB_SPARROW_LINKEDIN}
        VITE_WEB_SPARROW_DOWNLOAD_LINK: ${VITE_WEB_SPARROW_DOWNLOAD_LINK}
        VITE_WEB_RELEASE_NOTES_API: ${VITE_WEB_RELEASE_NOTES_API}
        VITE_WEB_SPARROW_DOCS: ${VITE_WEB_SPARROW_DOCS}
        VITE_WEB_TERMS_OF_SERVICE: ${VITE_WEB_TERMS_OF_SERVICE}
        VITE_WEB_ENABLE_MIX_PANEL: ${VITE_WEB_ENABLE_MIX_PANEL}
        VITE_WEB_MIX_PANEL_TOKEN: ${VITE_WEB_MIX_PANEL_TOKEN}
        VITE_WEB_SPARROW_SUPPORT_EMAIL: ${VITE_WEB_SPARROW_SUPPORT_EMAIL}
    container_name: sparrow-web
    networks:
      - localnet
    depends_on:
      - sparrow-proxy
      - sparrow-api
      - sparrow-auth
      - mongo
    ports:
      - 1422:1422
    env_file:
      - .env.docker-setup

  # Sparrow Admin Service
  sparrow-admin:
    image: sparrowapi/sparrow-admin-app:self-host-v1
    container_name: sparrow-admin
    networks:
      - localnet
    depends_on:
      - sparrow-api
      - sparrow-auth
      - mongo
    ports:
      - 5173:5173

  # Nginx Reverse Proxy with SSL
  # nginx-proxy:
  #   image: nginx:alpine
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/conf.d:/etc/nginx/conf.d
  #     - ./nginx/ssl:/etc/nginx/ssl
  #     - ./nginx/html:/usr/share/nginx/html
  #     - ./nginx/logs:/var/log/nginx
  #   networks:
  #     - localnet
  #   depends_on:
  #     - sparrow-api
  #     - sparrow-auth
  #     - sparrow-web
  #   restart: always

networks:
  localnet:
    driver: bridge
